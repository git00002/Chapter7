#!/usr/bin/env python3
import re
import sys
def extract_code_blocks(file_path, language="python"):
    # Regex pattern for code blocks
    pattern = re.compile(rf'```{language}\s(.*?)```', re.DOTALL)
    
    try:
        with open(file_path, 'r') as file:
            content = file.read()
        
        # Find all code blocks
        matches = pattern.findall(content)
        
        # Write the matched content to a new file or print it out
        extracted_content = ""
        for match in matches:
            extracted_content += match + '\n\n---\n\n'
        
        return extracted_content.strip()

    except FileNotFoundError:
        print(f"Error: The file {file_path} does not exist.")
        sys.exit(1)
    except Exception as e:
        print(f"An error occurred: {e}")
        sys.exit(1)
"""
if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python extract_code.py <filename>")
        sys.exit(1)
    
    filename = sys.argv[1]
    extracted_content = extract_code_blocks(filename)
    print(extracted_content)
"""
if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python3 ext.py <filename>")
        sys.exit(1)
    
    filename = sys.argv[1]
    extracted_content = extract_code_blocks(filename)
    
    blocks = extracted_content.split('---')
    
    # Print each block one by one and wait for user input to continue
    for i, block in enumerate(blocks, 1):
        print(f"#!/usr/bin/env python3 \n##version 0.0.{i}\n{block.strip()}\n")
        print('-' * 40)  #This line will later prompt user if wanting to save per iterations to file('s')
        input("Press Enter to continue to the next program...")
